<div class="container-fluid">

    <div class="row">

        <!-- Area Chart -->
        <div class="col-xl-9 col-lg-9">
            <div class="card shadow mb-4">

                <!-- Card Body -->
                <div class="card-body bg-primary rounded">
                    <div class="container-fluid">
                        <div class="row">
                            <div class="col-md-6">
                                <h5 class="m-0 font-weight-bold text-white">Welcome
                                    back <%= current_user.first_name %> <%= current_user.last_name %>!</h5>
                                <h6 class="mt-2 mb-0 font-weight-light text-white">Book meetings with your
                                    friends,colleagues and clients.</h6>
                                <h6 class="mt-2 font-weight-light text-white ">Your calendar stays full and
                                    you stay productive</h6>

                                <a href="javascript:void(0);" data-toggle="modal" data-target="#schedule-meeting-modal" class="btn bg-white text-black mt-4"><b
                                    class="meet">SCHEDULE A MEETING</b></a>
                                <!--                                <a href="javascript:void(0);" class="btn btn-light mt-4" data-toggle="modal" data-target="#createRoomModal">Create Room</a>-->
                            </div>
                            <div class="col-md-6">
                                <img src="/img/OBJECTS.png" class="float-right" alt="img">
                            </div>

                        </div>
                    </div>
                </div>
            </div>

            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h4 class="m-0 font-weight-bold tcolor"><%= t("recording.all_recordings") %></h4>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <div class="container-fluid">
                            <div class="row">
                                <div class="col-md-6">

                                </div>
                                <div class="col-md-6 mb-4">
                                    <div id="search-bar" class="d-inline-block float-right">
                                        <div class="input-group">
                                            <input id="search-input" type="text" class="form-control" placeholder="<%= t("settings.search") %>..." value="<%= @search %>">
                                            <% unless @search.blank? %>
                                                <span id="clear-search" class="text-primary" onclick="clearSearch()"><i class="fas fa-times"></i></span>
                                            <% end %>
                                            <span class="input-group-append"><button class="btn btn-outline-primary" type="button" onclick="searchPage()"><i class="fas fa-search"></i></button></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <table id="recordings-table" class="table table-bordered dash-record">
                            <thead>
                            <tr>
                                <th data-header="name" data-order="<%= @order_column == "name" ? @order_direction : "none" %>">
                                    <%= t("recording.table.name") %>
                                    <% if @order_column == "name" && @order_direction == "desc" %>
                                        ↓
                                    <% elsif @order_column == "name" && @order_direction == "asc" %>
                                        ↑
                                    <% end %>
                                </th>
                                <% if recording_thumbnails? %>
                                    <th>
                                        <%= t("recording.table.thumbnails") %>
                                    </th>
                                <% end %>
                                <th class="text-left" data-header="length" data-order="<%= @order_column == "length" ? @order_direction : "none" %>">
                                    <%= t("recording.table.length") %>
                                    <% if @order_column == "length" && @order_direction == "desc" %>
                                        ↓
                                    <% elsif @order_column == "length" && @order_direction == "asc" %>
                                        ↑
                                    <% end %>
                                </th>
                                <th class="text-left" data-header="users" data-order="<%= @order_column == "users" ? @order_direction : "none" %>">
                                    <%= t("recording.table.users") %>
                                    <% if @order_column == "users" && @order_direction == "desc" %>
                                        ↓
                                    <% elsif @order_column == "users" && @order_direction == "asc" %>
                                        ↑
                                    <% end %>
                                </th>
                                <th class="text-left" data-header="visibility" data-order="<%= @order_column == "visibility" ? @order_direction : "none" %>">
                                    <%= t("recording.table.visibility") %>
                                    <% if @order_column == "visibility" && @order_direction == "desc" %>
                                        ↓
                                    <% elsif @order_column == "visibility" && @order_direction == "asc" %>
                                        ↑
                                    <% end %>
                                </th>
                                <th data-header="formats" data-order="<%= @order_column == "formats" ? @order_direction : "none" %>">
                                    <%= t("recording.table.formats") %>
                                    <% if @order_column == "formats" && @order_direction == "desc" %>
                                        ↓
                                    <% elsif @order_column == "formats" && @order_direction == "asc" %>
                                        ↑
                                    <% end %>
                                </th>
                                <% unless false %>
                                    <th class="text-center"><i class="icon-settings"></i></th>
                                <% end %>
                            </tr>
                            </thead>
                            <tbody id="recording-table">
                            <tr id="no_recordings_found" style="display: none;">
                                <td colspan="7" class="text-center h4 p-6 font-weight-normal">
                                    <%= t("recording.no_matched_recordings", inject: false ? t("recording.visibility.public").downcase + " " : "") %>
                                </td>
                            </tr>
                            <% if @recordings.empty? %>
                                <tr>
                                    <td colspan="7" class="text-center h4 p-6 font-weight-normal">
                                        <% if true %>
                                            <%= t("recording.no_user_recordings") %>
                                        <% else %>
                                            <%= t("recording.no_recordings", inject: only_public ? t("recording.visibility.public").downcase + " " : "") %>
                                        <% end %>
                                    </td>
                                </tr>
                            <% else %>
                                <% failed_recordings = 0 %>
                                <% recordings.each do |recording| %>
                                    <% begin %>
                                        <% if only_public || (defined?(shared_room) && shared_room) %>
                                            <%= render "shared/components/public_recording_row", recording: recording %>
                                        <% else %>
                                            <%= render "shared/components/recording_row", recording: recording %>
                                        <% end %>
                                    <% rescue => e %>
                                        <% logger.error "Error retrieving recording #{recording[:meetingID]}: #{e} -> #{e.backtrace[0]}" %>
                                        <% failed_recordings += 1 %>
                                    <% end %>
                                <% end %>

                                <% if failed_recordings > 0 %>
                                    <div class="alert alert-danger alert-dismissible text-center mb-0">
                                        <%= t("recording.error", count: failed_recordings) %>
                                    </div>
                                <% end %>
                            <% end %>
                            </tbody>
                        </table>
                        <% if !@recordings.empty? %>
                            <div class="float-md-right mt-4">
                                <%== pagy_bootstrap_nav(pagy) %>
                            </div>
                        <% end %>
                    </div>
                </div>
            </div>

            <!-- Color System -->
            <div class="row">
                <div class="col-lg-4 mb-4">
                    <div class="card bg-white text-black shadow">
                        <div class="card-body">
                            <div class="container-fluid">
                                <div class="row">

                                    <div class="col-md-4">
                                        <div class="numberCircle cnew"><b><%= @meetings_this_month %></b></div>
                                    </div>
                                    <div class="col-md-8">
                                        <h5 class="mb-0"><b>Meetings</b></h5>
                                        <small>This Year</small>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-lg-4 mb-4">
                    <div class="card bg-white text-black shadow">
                        <div class="card-body">
                            <div class="container-fluid">
                                <div class="row">

                                    <div class="col-md-4">
                                        <div class="numberCircle dnew"><b><%= @meetings_this_month %></b></div>
                                    </div>
                                    <div class="col-md-8">
                                        <h5 class="mb-0"><b>Meetings</b></h5>
                                        <small>This Month</small>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-lg-4 mb-4">
                    <div class="card bg-white text-black shadow">
                        <div class="card-body">
                            <div class="container-fluid">
                                <div class="row">

                                    <div class="col-md-4">
                                        <div class="numberCircle enew"><b><%= @meetings_this_week %></b></div>
                                    </div>
                                    <div class="col-md-8">
                                        <h5 class="mb-0"><b>Meetings</b></h5>
                                        <small>This Week</small>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <div class="col-xl-3 col-lg-3 upcoming-events">
            <div class="card shadow mb-4">
                <div id="upcoming-events">
                    <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between sche-p">
                        <h5 class="m-0 font-weight-bold e33 pd-t20">Upcoming Meetings</h5>
                    </div>
                    <div class="card-body p-0">
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item" v-for="(schedule, index) in schedules">
                                <h5 class="text-black font-weight-bold">
                                    <b class="b66">{{ schedule.title }}</b>
                                    <template v-if="schedule.events_tag">
                                        <span class="badge" :class="{'badge-danger': tag == 'important', 'badge-primary': tag == 'normal', 'badge-secondary': tag == 'general'}" v-for="tag in getEventTags(schedule.events_tag)">{{ tag }}</span>
                                    </template>
                                </h5>
                                <h6>{{ getFullDate(schedule.start_date) }}</h6>
                                <h6 v-if="schedule.all_day">All day</h6>
                                <h6 v-else>{{schedule.start_time}} to {{ schedule.end_time }}</h6>
                                <div>
                                    <span class="avatar" v-for="guest in schedule.guests">{{guest.username[0]}}</span>
                                </div>
                                <div class="container-fluid p-0">
                                    <div class="row">
                                        <div class="col-md-12 pt-2 pb-2">
                                            <h5 class="new-color">Organized by</h5>
                                        </div>

                                        <div class="col-md-2">
                                            <img src="/img/bot.png" alt="" class="float-left" v-if="schedule.user.image">
                                            <span class="avatar bg-primary" v-else>{{schedule.user.name[0]}}</span>
                                        </div>
                                        <div class="col-md-10">
                                            <h6 class="mb-0"><b>{{getFullName(schedule.user)}}</b></h6>
                                            <small class="new-color">{{schedule.user.email}}</small>
                                        </div>
                                    </div>
                                </div>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<% content_for :modals do %>
    <%= render "shared/modals/schedule_meeting" %>
<% end %>

<% content_for :scripts do %>
    <script>
        var eventBus = new Vue();

        new Vue({
            el: '#schedule-meeting',
            data: {
                id: null,
                title: '',
                start_date: '',
                end_date: '',
                start_time: '',
                end_time: '',
                all_day: false,
                repeat_weekly: false,
                repeat_day: 0,
                mute_video: false,
                mute_audio: false,
                record_meeting: false,
                description: '',
                event_tags: [],
                notification_type: 'Email',
                notification_minutes: 10,
                guests: [],
                guest_name: '',
                guest_permissions: [],
                everyone_as_admin: false,
                modify_meeting: false,
                invite_others: false,
                see_guest_list: false,
                timezones: [],
                selected_tz_name: 'Asia/Calcutta',
                room_uid: null
            },
            mounted: function () {
                const getTimezoneList = moment.tz.names().map(t => {
                    return {
                        name: `(GMT${moment.tz(t).format('Z')}) ${t}`,
                        value: t
                    }
                });
                this.timezones = getTimezoneList.sort(this.sortByZone)
            },
            methods: {
                sortByZone(a, b) {
                    let [ahh, amm] = a.name.split("GMT")[1].split(")")[0].split(":");
                    let [bhh, bmm] = b.name.split("GMT")[1].split(")")[0].split(":");
                    return (+ahh * 60 + amm) - (+bhh * 60 + bmm)
                },
                handleSubmit() {
                    let authenticity_token = $('#authenticity_token').val();

                    axios.post('/schedules/store', {
                        authenticity_token: authenticity_token,
                        title: this.title,
                        start_date: this.start_date,
                        end_date: this.end_date,
                        start_time: this.start_time,
                        end_time: this.end_time,
                        all_day: this.all_day,
                        repeat_weekly: this.repeat_weekly,
                        repeat_day: this.repeat_day,
                        mute_video: this.mute_video,
                        mute_audio: this.mute_audio,
                        record_meeting: this.record_meeting,
                        description: this.description,
                        event_tags: this.event_tags,
                        notification_type: this.notification_type,
                        notification_minutes: this.notification_minutes,
                        guests: this.guests,
                        guest_permissions: {
                            everyone_as_admin: this.everyone_as_admin,
                            modify_meeting: this.modify_meeting,
                            invite_others: this.invite_others,
                            see_guest_list: this.see_guest_list
                        },
                        timezone: this.selected_tz_name,
                    })
                        .then(res => {
                            window.location.reload();
                        })
                        .catch(error => console.error(error))
                },
                handleAddGuest() {
                    if (this.guest_name) {
                        this.guests.push(this.guest_name);
                        this.guest_name = ''
                    }
                },
                addGuest(e) {
                    if (e.keyCode == 13) {
                        e.preventDefault()
                        if (this.guest_name) {
                            this.guests.push(this.guest_name);
                            this.guest_name = ''
                        }
                    }
                },
                removeGuest(index) {
                    this.guests.splice(index, 1)
                },
                getOnlyDate(date) {
                    var month = '' + (date.getMonth() + 1),
                        day = '' + date.getDate(),
                        year = date.getFullYear();

                    if (month.length < 2)
                        month = '0' + month;
                    if (day.length < 2)
                        day = '0' + day;

                    return [year, month, day].join('-');
                },
                getOnlyTime(date) {
                    var hours = '' + date.getHours(),
                        minutes = '' + date.getMinutes();

                    if (hours.length < 2)
                        hours = '0' + hours;
                    if (minutes.length < 2)
                        minutes = '0' + minutes;

                    return [hours, minutes].join(':');
                },
                startMeeting() {
                    let authenticity_token = $('#authenticity_token').val();
                    var form = document.createElement("form")
                    var tokenEl = document.createElement("input")

                    form.method = "POST"
                    form.action = `/${this.room_uid}/start`

                    tokenEl.value = authenticity_token
                    tokenEl.name = "authenticity_token"

                    form.appendChild(tokenEl);
                    document.body.appendChild(form)
                    form.submit();
                }
            }
        })

        new Vue({
            el: '#upcoming-events',
            data: {
                schedules: []
            },
            mounted() {
                axios.get('/schedules/upcoming')
                    .then(res => res.data)
                    .then(data => {
                        this.schedules = data
                    })
                    .catch(error => console.error(error))
            },
            methods: {
                getEventTags(tag_string) {
                    return tag_string.split(",")
                },
                getFullDate(dateString) {
                    return new Date(dateString).toDateString();
                },
                getFullName(user) {
                    if (user.first_name || user.last_name) {
                        return user.first_name + ' ' + user.last_name
                    } else {
                        return user.name
                    }
                }
            }
        })

        function searchPage() {
            var search = $("#search-input").val();

            // Check if the user filtered by role
            var role = new URL(location.href).searchParams.get('role')
            var tab = new URL(location.href).searchParams.get('tab')

            var url = window.location.pathname + "?page=1&search=" + search

            if (role) { url += "&role=" + role }
            if (tab) { url += "&tab=" + tab }

            window.location.replace(addRecordingTable(url));
        }

        function addRecordingTable(url) {
            if($("body").data('controller') === "rooms" && $("body").data('action') === "show") {
                url += "#recordings-table"
            }
            return url
        }

        // Clears the search bar
        function clearSearch() {
            var role = new URL(location.href).searchParams.get('role')
            var tab = new URL(location.href).searchParams.get('tab')

            var url = window.location.pathname + "?page=1"

            if (role) { url += "&role=" + role }
            if (tab) { url += "&tab=" + tab }

            window.location.replace(addRecordingTable(url));

            var search_params = new URLSearchParams(window.location.search)
        }
    </script>
<% end %>